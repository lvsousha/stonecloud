<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	    http://www.springframework.org/schema/beans/spring-beans.xsd  
	    http://www.springframework.org/schema/tx 
	    http://www.springframework.org/schema/tx/spring-tx.xsd  
	    http://www.springframework.org/schema/aop 
	    http://www.springframework.org/schema/aop/spring-aop.xsd
	    http://www.springframework.org/schema/task
	    http://www.springframework.org/schema/task/spring-task.xsd
	    http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd"
    default-autowire="byName">   
	<context:property-placeholder location="classpath:config.properties" />
	<!-- 引入spring注解 -->
	<context:annotation-config />
	<!-- 配置注解扫描目录 -->
	<context:component-scan base-package="com.stone.webapp.**" />
	
	<!-- 阿里 druid 数据库连接池     
					https://github.com/alibaba/druid/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">  
         <!-- 数据库基本信息配置 -->
         <property name = "url" value = "${jdbc.url}" />  
         <property name = "username" value = "${jdbc.username}" />  
         <property name = "password" value = "${jdbc.password}" />  
         <property name = "driverClassName" value = "${jdbc.driverClassName}" />  
         <property name = "filters" value = "${filters}" />  
          <!-- 最大并发连接数 -->
         <property name = "maxActive" value = "${maxActive}" />
         <!-- 初始化连接数量 -->
         <property name = "initialSize" value = "${initialSize}" />
         <!-- 配置获取连接等待超时的时间 -->
         <property name = "maxWait" value = "${maxWait}" />
         <!-- 最小空闲连接数 -->
         <property name = "minIdle" value = "${minIdle}" />  
         <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
         <property name = "timeBetweenEvictionRunsMillis" value ="${timeBetweenEvictionRunsMillis}" />
         <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
         <property name = "minEvictableIdleTimeMillis" value ="${minEvictableIdleTimeMillis}" />  
         <property name = "validationQuery" value = "${validationQuery}" />  
         <property name = "testWhileIdle" value = "${testWhileIdle}" />  
         <property name = "testOnBorrow" value = "${testOnBorrow}" />  
         <property name = "testOnReturn" value = "${testOnReturn}" />  
         <property name = "maxOpenPreparedStatements" value ="${maxOpenPreparedStatements}" />
         <!-- 打开 removeAbandoned 功能 -->
         <property name = "removeAbandoned" value = "${removeAbandoned}" />
         <!-- 1800 秒，也就是 30 分钟 -->
         <property name = "removeAbandonedTimeout" value ="${removeAbandonedTimeout}" />
         <!-- 关闭 abanded 连接时输出错误日志 -->   
         <property name="logAbandoned" value="${logAbandoned}" />
    </bean>
	<!-- 数据源 -->
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="timeBetweenEvictionRunsMillis" value="1800000" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="60" />
		<property name="initialSize" value="5" />
		<property name="maxActive" value="30" />
		<property name="maxWait" value="5000" />
		<property name="maxIdle" value="50" />
		<property name="minIdle" value="30" />
	</bean> -->
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 持久层 采用mybatis -->
    <bean id="sqlSessionFactoryBeanName" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis.xml" />
        <property name="typeAliasesPackage" value="com.stone.webapp.mapper" />
        <property name="mapperLocations" value="classpath*:mapper/*.xml" />
    </bean>      
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.stone.webapp.mapper"/>
    </bean>
    
    <!-- transaction support-->
	<!-- PlatformTransactionMnager -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	    <property name="dataSource" ref="dataSource" />
	</bean>
	<!-- enable transaction annotation support -->
	<tx:annotation-driven transaction-manager="txManager" />
	
</beans>
